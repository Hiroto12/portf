import base64
import streamlit as st
import plotly.express as px
import os
df = px.data.iris()

@st.cache_data
def get_img_as_base64(file):
    with open(file, "rb") as f:
        data = f.read()
    return base64.b64encode(data).decode()

img = get_img_as_base64("image4.jpg")

page_bg_img = f"""
<style>
[data-testid="stAppViewContainer"] > .main {{
background-image: url("https://media.giphy.com/media/501qrEz3NAqyc/giphy.gif");
background-size: cover;
background-position: center;
background-repeat: no-repeat;
background-attachment: local;
color: white; 
}}

[data-testid="stSidebar"] > div:first-child {{
background-image: url("data:image/png;base64,{img}");
background-position: center; 
background-repeat: no-repeat;
background-attachment: fixed;
}}

[data-testid="stHeader"] {{
background: rgba(0,0,0,0);
}}

[data-testid="stToolbar"] {{
right: 2rem;
}}

.st-h1, .st-h2, .st-h3, .st-h4, .st-h5, .st-h6, .st-figcaption, .st-caption, .st-imgtxt, .st-txt, .st-tt, .st-err, .st-em, .st-lg {{
    color: white;
}}

</style>
"""

st.markdown(page_bg_img, unsafe_allow_html=True)
st.markdown("<h1 style='color: white;'>Descubra o poder al√©m da planilha</h1>", unsafe_allow_html=True)

# Iniciando a Sidebar
st.sidebar.header("")

# T√≠tulo de Contato
st.sidebar.markdown("<h2 style='color: white;'>Contato</h2>", unsafe_allow_html=True)

# Exibindo a imagem com dimens√µes reduzidas
image_path = "imagem5.jpeg"
if os.path.exists(image_path):
    st.sidebar.image(image_path, use_column_width='auto', width=200)  # Ajuste a largura conforme necess√°rio
else:
    st.sidebar.warning(f"Imagem '{image_path}' n√£o encontrada.")

# Texto sobre informa√ß√µes da equipe
st.sidebar.markdown("<p style='color: white;'>Informa√ß√µes da equipe:</p>", unsafe_allow_html=True)
texto = st.markdown("<p style='color: white;'>Informa√ß√µes da equipe:</p>", unsafe_allow_html=True)
# Selectbox com os nomes da equipe
equipe = st.sidebar.selectbox("Escolha um membro da equipe", ["Hiroto", "Jo√£o Victor"])

# Mostrar a descri√ß√£o correspondente ao membro da equipe selecionado
if equipe == "Hiroto":
    st.sidebar.markdown("""
    <p style='color: white;'>Formando em Engenharia de Computa√ß√£o pela Unifei - Campus Itabira, conheceu o mundo dos dados a mais de 3 anos em uma Inicia√ß√£o Cient√≠fica com o tema de Radar Meteorol√≥gico, sendo necess√°rio analisar dados para previs√£o de chuva em uma base de mais 5TB de dados.</p>
    """, unsafe_allow_html=True)
elif equipe == "Jo√£o Victor":
    st.sidebar.markdown("""
    <p style='color: white;'>Formando em Engenharia de Computa√ß√£o Pela Unifei- Campus Itabira, possui experi√™ncia como desenvolvedor full stack em uma empresa j√∫nior da Universidade. Embora recente no mundo de dados, j√° virou um expert no desenvolvimento de dashboards, simplificandos dados em visualiza√ß√µes que contam hist√≥rias que v√£o al√©m dos n√∫meros da planilha.</p>
    """, unsafe_allow_html=True)
# Adicionando GIF e texto de marketing
col1, col2 = st.columns(2)

with col1:
    st.image("https://media.giphy.com/media/HEOQ8abOwAxbHmpmTR/giphy.gif")
with col2:
    st.write("Desenvolvemos dashboards e analisamos dados. Chega de planilhas complicadas e an√°lises demoradas. Transforme seus dados em insights poderosos para sua empresa!")

with st.container():
    propaganda = """
        ### <span style="color:white">**Por que substituir planilhas por dashboards?**</span> üìä
        - **Efici√™ncia Temporal**: De acordo com [Forbes](https://www.forbes.com/), funcion√°rios gastam cerca de **2.5 horas por dia** buscando dados em planilhas. Dashboards centralizam e simplificam esse acesso.
        - **Tomada de Decis√£o Acelerada**: [Gartner](https://www.gartner.com/) aponta que empresas orientadas a dados tomam decis√µes **5 vezes mais r√°pido** do que seus concorrentes.
        - **Visualiza√ß√£o Clara**: 65% das pessoas s√£o aprendizes visuais, segundo [Social Science Research Network](https://www.ssrn.com/). Dashboards transformam dados brutos em representa√ß√µes visuais claras e compreens√≠veis.
        - **Automa√ß√£o de Processos**: Reduza erros manuais e processos redundantes automatizando a coleta e a apresenta√ß√£o dos dados.
        """

    st.markdown(propaganda, unsafe_allow_html=True)


with st.container():
    # T√≠tulo com destaque
    titulo1 = """
                ### <span style="color:white">**Dashboard turbinados**</span> 
              """
    st.markdown(titulo1, unsafe_allow_html=True)

    # Texto descritivo sobre as capacidades dos dashboards
    st.write("""
        Os dashboards s√£o ferramentas poderosas que transformam dados brutos em visuais impactantes e informa√ß√µes acion√°veis.
        Com eles, voc√™ pode rapidamente identificar tend√™ncias, monitorar metas, e tomar decis√µes baseadas em dados.
        Ao inv√©s de gastar horas analisando planilhas, um dashboard bem constru√≠do oferece insights em quest√£o de segundos.
        """)

    col1, col2 = st.columns(2)
    with col1:
        st.image('imagem1.jpeg')
    with col2:
        st.image('imagem2.jpg')


with st.container():
    with st.container():
        # T√≠tulo com destaque
        titulo1 = """
                    ### <span style="color:white">**Exemplo de An√°lise que realizamos**</span> 
                  """
        st.markdown(titulo1, unsafe_allow_html=True)

        # Texto descritivo sobre as capacidades dos dashboards
        st.write("""
            O estudo abaixo foi uma an√°lise que realizamos para entender os dados da pandemia, com foco na rela√ß√£o dos √≥bitos distribuidos em um per√≠odo. 
            A an√°lise inclui: entender as regras de neg√≥cios que constitui o problema, realizar as devidas limpezas, gera√ß√£o de hip√≥teses e sua valida√ß√£o com base nos resultados dos dados.
            """)
    # Incorporando o Jupyter notebook usando nbviewer
    link = "https://nbviewer.jupyter.org/github/Hiroto12/S-rie-Temporal-COVID-19-Estudos-/blob/main/An%C3%A1lise%20de%20S%C3%A9rie%20Temporal%20-%20Covid%2019.ipynb"
    st.markdown(f'<iframe src="{link}" width="100%" height="800px"></iframe>', unsafe_allow_html=True)